// $ makes a match compound atomic match, it will not use implicit whitespace

Statement = { AssignmentExpr | AssertCommand | PrintCommand | Expression }

AssignmentExpr = { "var" ~ Str+ ~ "=" ~ Expression }

Expression = { HttpCommand | "LITERAL" ~ LiteralValue }

AssertCommand = { "ASSERT" ~ "NOT"? ~ AssertSubCommand ~ Value ~ Value ~ QuoteString? }

AssertSubCommand = { "EQUALS" | "GTE" | "GT" | "LTE" | "LT" | "STATUS" }

PrintCommand = { "PRINT" ~ Value }

HttpCommand = { HTTPVerb ~ Path ~ HttpAssignment* ~ KeyValuePair* }

HTTPVerb = { "GET" | "PUT" | "POST" | "DELETE" }

Path = ${ ("/" ~ Str+)+ ~ ("?" ~ HttpAssignment ~ ("&" ~ HttpAssignment)*)? } // HTTP path, ? and & query params

KeyValuePair = { Str+ ~ "=>" ~ (ASCII_ALPHA+ | ASCII_DIGIT) } // repeatable optional key/val like timeout=>60

HttpAssignment = ${ Str+ ~ "=" ~ (ASCII_ALPHA+ | ASCII_DIGIT) }

QuoteString = { "\"" ~ ASCII_ALPHA+ ~ "\"" } // TODO: Will need to add variable support in here

LiteralValue = { QuoteString | ASCII_DIGIT }

VariableValue = ${ "(" ~ Str+ ~ ")" }

Value = ${ LiteralValue | VariableValue }

Str = { ASCII_ALPHANUMERIC | "-" | "_" }
